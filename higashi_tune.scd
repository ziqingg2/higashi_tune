/*
HIGASHI TUNE
Ziqing (Gary) Gong
MAY 2021

higashi tune is an ambient/minimalist/algorithmic piece based on melodic, harmonic, and rhythmic material of four tradtional Chinese folk genres:

1. Kuai Ban (starts from 1:01)
https://en.wikipedia.org/wiki/Kuaibanshu
https://www.youtube.com/watch?v=ARguPshOLss&t=76s

2. JingYun Dagu
http://en.chinaculture.org/library/2008-01/10/content_40114.htm
https://www.youtube.com/watch?v=ibeQj5FA3nM

3. JingDong Dagu
(This genre is similar to 2.JingYun Dagu with the exception that JingYun Dagu is based in Beijing, China, while JingDong Dagu is mostly performed in Tianjin, China)
https://www.youtube.com/watch?v=KuksYkovUVw

* 1, 2, 3 all belong a larger category, Quyi(https://en.wikipedia.org/wiki/Quyi), while 4 is a slightly more "serious" genre comparing to the other 3)

4. Hebei Bangzi
(This genre is very similar to Peking Opera in terms of form, characters, and type of plays)
https://www.youtube.com/watch?v=TLJxFTM08BA

This piece is almost entirely composed of musical material of the interludes/preludes from these 4 genres. After the original melody/rhythm of them first appeared, they are divided into smaller chunks of short melodic, harmonic, or rhythmic units as Pbinds. The order of pitches and note durations are shuffled or randomly selected, and then the results are processed by applying reverb/delay. Meanwhile, there are some other material (mostly generated by granular synthesis) used as ambient sound sources. I mapped these Pbinds onto TouchOSC as push buttons or tuggles which control the playing or stoping of events.

*/

s.makeWindow;
(
s.freeAll;
ServerTree.removeAll;

~touchosc = NetAddr.new("10.13.0.242", 9000);


s.newBusAllocators;
~reverbBus = Bus.audio(s, 2);
~combNBus = Bus.audio(s,2);

~makeNoodes = {
	s.bind({
		~fxGroup = Group.new;
		~reverb = Synth(\reverb, [\in, ~reverbBus,\dry,0.2,\wet,0.8], ~fxGroup,addAction: \addToTail);
		~combN = Synth(\combN, [\in, ~combNBus, \out,~reverbBus ], ~fxGroup);
	});
};


s.waitForBoot({

	Buffer.freeAll;

	s.sync;

	~bufPath = PathName.new(thisProcess.nowExecutingPath).parentPath ++ "audio/";

	e = Buffer.read(s, ~bufPath ++ "PianoMute_DelayShortMN.wav");
	f = Buffer.read(s, ~bufPath ++ "BassDrum.wav");

	~buf = Buffer.alloc(s,4096);
	~buf2 = Buffer.alloc(s,4096);

	s.sync;

	~wavsig = Signal.sineFill(2048,
		[0.2,0.3,0.5,0.7,0.09,0.11,0.61,0.67,0.71],
		[pi,0,pi,0,pi,0,pi,pi,pi]).asWavetable;

	~wavsig2 = Signal.sineFill(2048,
		[0,0.2,0.52,0.72,0.1,0.21,0.2,0.67,0.4],
		[pi/2,0,pi/2,0,pi/3,0,pi/2,pi,pi/2]).asWavetable;

	//~wavsig.plot;

	~buf.sendCollection(~wavsig);
	~buf2.sendCollection(~wavsig2);

	//~buf.plot;

	s.sync;

	SynthDef.new(\short, {

		arg freq=500, atk=0.002, sus=0, rel=1,
		pan=0, amp=0.1, out=0;

		var sig, env;

		env = EnvGen.ar(
			Env.new([0,1,1,0],[atk,sus,rel],[-4,0,-4]),
			doneAction:2
		);
		sig = LFTri.ar(freq,0.5);
		sig = sig + LFPulse.ar(freq * 0.98, 0.2,0.8,0.1);
		sig = sig +BrownNoise.ar(0.002!2);
		sig = BPF.ar(sig, WhiteNoise.kr(1,300), 2.5, 5);
		sig = Pan2.ar(sig, pan, amp) * env;

		Out.ar(out, sig);
	}).add;


	SynthDef.new(\perc, {
		var mod, sig, env;
		env = EnvGen.ar(
			Env.new([0,1,0],[0,\rel.kr(0.1),0],\curve.kr(-5)),
			doneAction:2
		);
		mod = SinOsc.ar(\freq.kr(80) * \modR.kr(0.6875),mul:\index.kr(25));
		sig = SinOsc.ar(\freq.kr(80) * \carR.kr(1) + mod) * env;
		sig = Pan2.ar(sig,\pan.kr(0),\amp.kr(0.1));
		Out.ar(\out.kr(0),sig);
	}).add;

	SynthDef.new(\wavfm,{
		var sig,env,mod;
		env = Env(
			[0,1,0],
			[\atk.kr(0.05),\rel.kr(0.8)],
			[\atkcrv.kr(1.2),\relcurve.kr(0.5)]).ar(2);
		mod = LFTri.ar(\freqM.kr(1000), mul:\modR.kr(1) * (\freqM.kr(1000)));
		sig = Osc.ar(~buf,\freq.kr(333) + mod);
		sig = Pan2.ar(sig,\pan.kr(0),\amp.kr(0.2));
		sig = sig +BrownNoise.ar(0.007!2);
		sig = HPF.ar(sig,\cutfreq.kr(500));
		sig = sig * env;
		Out.ar(\out.kr(0),sig);
	}).add;

	SynthDef.new(\wavtab, {
		var sig,env,mod;
		env = Env(
			[0,1,0],
			[\atk.kr(0.05),\rel.kr(0.8)],
			[\atkcrv.kr(1.2),\relcurve.kr(0.5)]).ar(2);
		sig = Osc.ar(\buf.kr(~buf2),\freq.kr(103));
		sig = Pan2.ar(sig,\pan.kr(0),\amp.kr(0.2));
		sig = sig +BrownNoise.ar(0.002!2);
		sig = HPF.ar(sig,\cutfreq.kr(500));
		sig = sig * env;
		Out.ar(\out.kr(0),sig);
	}).add;

	SynthDef(\grain, {
		var sig, env;
		env = Env.asr(\atk.ir(0.1), \sus.ir(1), \rel.ir(1)).kr(2,\gate.kr(1));
		sig = GrainBuf.ar(
			1,
			trigger: Dust.kr(LFNoise1.kr(1,add:25)),
			dur: \durG.kr(3),
			sndbuf:\buf.kr(0),
			rate:LFNoise1.kr(0.2,10,20),
			pos: LFNoise1.kr(0.5,0.8,10).range(0,1),
			interp:4,

		);
		sig = LPF.ar(sig,\cutfreq.kr(1000));
		sig = Pan2.ar(sig,\pan.kr(0),\amp.kr(0.1));
		sig = sig * env;
		Out.ar(\out.kr(0),sig);
	}).add;

	SynthDef(\grain2, {
		var sig, env;
		env = Env.asr(\atk.ir(0.1), \sus.ir(1), \rel.ir(1)).kr(2,\gate.kr(1));
		sig = GrainBuf.ar(
			1,
			trigger: \trigger.kr(0.01),
			dur: \durG.kr(3),
			sndbuf:\buf.kr(0),
			rate:\rate.kr(0.5),
			pos: \pos.kr(0.5),
			interp:4,
			pan:\pan.kr(0),
		);
		sig = sig * env * \amp.kr(0.4);
		Out.ar(\out.kr(0),sig!2);
	}).add;



//sound maker synthdefs

	SynthDef.new(\drones, {
		arg freq=500, atk=0.002, sus=0, rel=1,
		pan=0, amp=0.1, out=0;

		var sig, env;

		env = EnvGen.ar(
			Env.new([0,1,1,0],[atk,sus,rel],[2,0,-2]),
			doneAction:2
		);
		sig = Pulse.ar(freq*[1,0.99],\width.kr(0.5),0.04);
		sig = sig +SinOsc.ar(freq*1.5*[1,1.004],0,0.15);
		sig = sig +PinkNoise.ar(0.002!2);
		sig = BPF.ar(sig, WhiteNoise.kr(1,500), 2.5, 5);
		sig = sig.sum;
		sig = Pan2.ar(sig, pan, amp) * env;
		Out.ar(out, sig);
	}).add;


//delayed and comb filtered pulses playing short motives
	SynthDef.new(\pulse, {
		arg gate = 1, amp = 0.08, out = 0;
		var sig, trigEnv, env, trig;
		sig = LFPulse.ar(\freq.kr(300),0.75,\width.kr(0.4));
		trig = Dust.ar(1!2);
		trigEnv = EnvGen.ar(Env.perc(0.002,0.1),trig);
		sig = sig * trigEnv;
		env = EnvGen.kr(Env.asr(0.01,1,1,-1), gate, doneAction:2);
		sig = sig * env * amp;

		Out.ar(out,sig);
	}).add;





//effet synthdefs

	SynthDef(\combN, {
		var sig, del;
		sig = In.ar(\in.kr(0),2);
		del = CombN.ar(sig,1,\del.kr(0.5), \dec.kr(5));
		sig = sig.blend(del,\mix.kr(0.4));
		Out.ar(\out.kr(0),sig);
	}).add;

	SynthDef.new(\reverb, {
		arg in=0, drylevel=0.7, wetlevel=0.3, out=0;
		var sig, reverb;
		sig = In.ar(in, 2);
		reverb = In.ar(in, 2);
		reverb = LPF.ar(GVerb.ar(sig, 250, 4), 900);
		sig = (sig * drylevel) + (reverb * wetlevel);
		Out.ar(out, sig);
	}).add;

	s.sync;


/////////////////////////////////////////////////////////////////////////////////////

	~kbrhythmOri = Pbind(
		\instrument,\wavtab,
		\dur, Pseq([
			1, 1, 1, 0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,
			0.5,0.25,0.25,0.5,0.5,0.125,0.375,0.5,0.5,0.5,
			0.5,0.25,0.25,0.5,0.5,0.125,0.375,0.5,0.5,0.25,0.25,
			0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,
			0.5,0.25,0.25,0.5,0.5,0.125,0.375,0.5,0.5,0.5,
			0.5,0.5,0.5,0.25,0.25,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,1,
			0.5,0.25,0.25,0.5,0.5,2
		],77),
		\freq,Pwhite(41.6,41.72,77),
		\amp,Pwhite(0.15,0.5,77),
		\rel,Prand([0.1,0.2,0.12],inf),
		\atk,0.01,
		\cutfreq,Pwhite(200,800,77),
		//\freqM,Pwhite(100,200,100),
		//\modR,Pwhite(20,50,inf),
		//\modR,Pwhite(1,15,100),
		//\carR,Pwhite(1,5,100),
		//\index,Prand([15,20,25,30],100),
		\out,~reverbBus,
		\detune,Pwhite(1,1.2,77),
		\harmonic,Pexprand(1, 10, 77).round,
	);


	~rhythmkbLong = Pbind(
		\instrument,\wavfm,
		\dur, Pseq([
			1, 1, 1, 0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,
			0.5,0.25,0.25,0.5,0.5,0.125,0.375,0.5,0.5,0.5,
			0.5,0.25,0.25,0.5,0.5,0.125,0.375,0.5,0.5,0.25,0.25,
			0.5,0.25,0.25,0.5,0.5,0.5,0.5,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,
			0.5,0.25,0.25,0.5,0.5,0.125,0.375,0.5,0.5,0.5,
			0.5,0.5,0.5,0.25,0.25,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,1,
			0.5,0.25,0.25,0.5,0.5,2
		],inf),
		\freq,Pwhite(50,55.5,inf),
		\amp,Pwhite(0.005,0.01,inf),
		\rel,Prand([0.15,0.25,0.32],inf),
		\atk,0.01,
		//\cutfreq,Pwhite(200,800,100),
		\freqM,Pwhite(100,200,inf),
		\modR,Pwhite(20,50,inf),
		//\modR,Pwhite(1,15,100),
		//\carR,Pwhite(1,5,100),
		//\index,Prand([15,20,25,30],100),
		\out,~combNBus,
	);



	~kbshort1 = Pbind(
		\instrument, \short,
		\dur, Pseq([
			0.5,0.25,0.25,0.5,0.5,0.125,0.375,0.5,0.5,0.25,0.25,
		],inf),
		\midinote,Prand([67,70,72,77,79,81,86,84]+ 12,inf),
		\amp,Pwhite(0.006,0.01,11),
		\rel,0.8,
		\atk,0.1,
		\sus,0.5,
		\out,~combNBus,
		\pan,Pwhite(-0.9,0.9,100),
	);


	~kbrhythmshort2 = Pbind(
		\instrument,\wavtab,
		\dur, Pseq([
			0.5,0.5,0.5,0.25,0.25,0.125,0.125,0.125,0.125,0.125,0.125,0.125,0.125,1,
			0.5,0.25,0.25,0.5,0.5,2
		],77),
		\freq,Pwhite(41.6,41.72,20),
		\amp,Pwhite(0.06,0.1,77),
		\rel,Prand([0.1,0.2,0.12],inf),
		\atk,0.01,
		\cutfreq,Pwhite(200,800,77),
		//\freqM,Pwhite(100,200,100),
		//\modR,Pwhite(20,50,inf),
		//\modR,Pwhite(1,15,100),
		//\carR,Pwhite(1,5,100),
		//\index,Prand([15,20,25,30],100),
		\out,~reverbBus,
		\detune,Pwhite(1,1.2,77),
		\harmonic,Pexprand(1, 10, 77).round,
	);




/////////////////////////////////////////////////////////////////////////////////////



	~jyOri = Pbind(
		\instrument, \short,
		\dur, Pseq([0.25],inf),
		\midinote,Pseq([
			77,\,\,\,74,\,72,\,69,\,72,\,77,\,74,\,
			72,\,74,\,72,74,77,\,69,\,\,67,65,\,\,\,
			72,\,74,\,70,\,\,70,70,\,70,\,\,\,69,\,
			67,\,69,\,67,\,65,\,62,65,69,\,\,67,65,\,
			\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,
		] + 12,inf),
		\amp,Pwhite(0.0028,0.05,80),
		\rel,Pwhite(0.25,0.6,100),
		\atk,0.01,
		\out,~reverbBus,
		\pan,Pwhite(-0.9,0.9,100),
		\detune,Pwhite(1,12,inf),
	);



	~jyRandlong = Pbind(
		\instrument,\wavtab,
		\dur, Pseq([0.25],inf),
		\midinote,Pshuf([
			77,\,\,\,74,\,72,\,69,\,72,\,77,\,74,\,
			72,\,74,\,72,74,77,\,69,\,\,67,65,\,\,\,
			72,\,74,\,70,\,\,70,70,\,70,\,\,\,69,\,
			67,\,69,\,67,\,65,\,62,65,69,\,\,67,65,\,
			\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,
		] - 24,inf),
		\amp,Pwhite(0.008,0.03,inf),
		\rel,Pwhite(1,4,inf),
		\atk,0.01,
		\cutfreq,Pwhite(100,500,inf),
		\out,~combNBus,
		\buf,~buf2,
		\detune,Pwhite(1,1.2,inf),
		\harmonic,Pexprand(1, 4, inf).round,
		\atkcrv,Pwhite(0.2,2,inf),
		\relcrv,Pwhite(-0.2,-2,inf)
	);


	~jyshort = Pbind(
		\instrument, \perc,
		\dur, Pseq([0.25],inf),
		\midinote,Pshuf([
			77,\,\,\,74,\,72,\,69,\,72,\,77,\,74,\,
			72,\,74,\,72,74,77,\,69,\,\,67,65,\,\,\,
			72,\,74,\,70,\,\,70,70,\,70,\,\,\,69,\,
			67,\,69,\,67,\,65,\,62,65,69,\,\,67,65,\,
			\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,
		] + 12,inf),
		\amp,Pwhite(0.1,0.22,30),
		\rel,Pwhite(0.25,0.6,100),
		\atk,0.01,
		\out,~combNBus,
		\pan,Pwhite(-0.9,0.9,100),
		\detune,Pwhite(1,12,inf),
	);

	~jyshort2 = Pbind(
		\instrument, \short,
		\dur, Pseq([0.25],inf),
		\midinote,Pshuf([
			77,\,\,\,74,\,72,\,69,\,72,\,77,\,74,\,
			72,\,74,\,72,74,77,\,69,\,\,67,65,\,\,\,
			72,\,74,\,70,\,\,70,70,\,70,\,\,\,69,\,
			67,\,69,\,67,\,65,\,62,65,69,\,\,67,65,\,
			\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,
		] + 12,inf),
		\amp,Pwhite(0.01,0.05,15),
		\rel,Pwhite(0.25,0.6,100),
		\atk,0.01,
		\out,~combNBus,
		\pan,Pwhite(-0.9,0.9,100),
		\detune,Pwhite(1,12,inf),
	);



	~jypulseshort = Pbind(
		\instrument,\pulse,
		\dur, Pseq([0.25],inf),
		\midinote,Pshuf([
			77,\,\,\,74,\,72,\,69,\,72,\,77,\,74,\,
			72,\,74,\,72,74,77,\,69,\,\,67,65,\,\,\,
			72,\,74,\,70,\,\,70,70,\,70,\,\,\,69,\,
			67,\,69,\,67,\,65,\,62,65,69,\,\,67,65,\,
			\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\,
		] + 12,inf),
		\width,Pwhite(0.57,0.9,20),
		\atk,Pwhite(1, 1.25, inf),
		\sus,Pbrown(0.8,3.5, inf),
		\rel,Pwhite(3, 8, inf),
		\harmonic,Pexprand(1, 5, inf).round,
		\detune,[1.2,1.25],
		\amp,Pexprand(0.02,0.2,inf),
		\pan,Pwhite(-1.0,1.0,inf),
		\out,~combNBus
	);



/////////////////////////////////////////////////////////////////////////////////////


	~chords = Pbind(
		\instrument,\drones,
		\dur,Prand([0.1,0.125,0.25,1.5,2,0.75,1.25,2.5,3],inf),
		\atk,Pwhite(1, 1.25, inf),
		\sus,Pbrown(0.8,2.2, inf),
		\rel,Pwhite(1, 4, inf),
		\midinote,Pshuf([55,43,58,46,67,70,72,77,79,81,86,84]- 14,inf),
		\harmonic,Pexprand(1, 8, inf).round,
		\detune,Pexprand(1,1.25,inf),
		\amp,Pkey(\harmonic).lincurve(1,8,0.03,0.0008,-4),
		\pan,Pshuf([-1.0,-0.8,-0.5,-0.3,-0.1,0,0.1,0.3,0.5,0.8,1.0],inf),
		\out,~combNBus,
		\cutfreq,Pwhite(250,3000,inf),
		\width,Pwhite(0.4,0.7,inf),
	);



/////////////////////////////////////////////////////////////////////////////////////

	~amb1 = Pbind(
		\instrument,\grain,
		\buf,e,
		\out,~combNBus,
		\pos, Pwhite(0.1,0.9,inf),
		\rate, Pwhite(2,10,inf),
		\amp,0.5,
		\durG,Pwhite(0.05,0.08,inf),
		\pan, Pwhite(-1.0,1.0,inf),
	);


	~amb1var = Pbind(
		\instrument,\grain,
		\buf,f,
		\out,~reverbBus,
		\pos, [0.5,0.7],
		\rate, Pwhite(0.2,1,inf),
		\amp,0.4,
		\durG,[0.01,0.002],
		\pan, Pwhite(-1.0,1.0,inf),
	);




	~amb2 = Pbind(
		\instrument,\grain2,
		\buf,e,
		\out,~combNBus,
		\pos, Pwhite(0.3,0.8,inf),
		\rate, [1.25,0.8],
		//\rate, Pwhite(0.5,4,inf),
		\amp,Pwhite(0.01,0.3,inf),
		\durG,Pwhite(0.5,2,inf),
		\pan, [-0.8,0.8],
		\cutfreq,Pwhite(500,5000,inf)
	);




	~amb3 = Pbind(
		\instrument,\grain2,
		\trigger,Pwhite(0.03,20,inf),
		\durG,Pwhite(0.5,10,inf),
		\buf,e,
		\pos,Pwhite(0.5,0.8,inf),
		\out,~reverbBus,
		\rate,Pshuf([5,12],inf),
		\amp,0.3,
		\pan, Pwhite(-1.0,1.0,inf),
	);



/////////////////////////////////////////////////////////////////////////////////////




	~jdOri = Pbind(
		\instrument,\wavtab,
		\dur, Pseq([0.25],inf),
		\midinote, Pseq([
			65,\,\,\,60,\,\,\,62,\,\,65,67,\,69,\,
			62,\,\,\,65,\,\,67,70,\,67,\,70,\,74,\,
			72,\,72,\,72,\,\,74,77,\,74,\,72,\,74,72,
			70,70,67,70,72,\,72,70,67,70,72,\,72,70,67,70,
			65,\,\,65,65,\,65,\,\,\,70,\,70,\,\,70,
			70,\,70,\,\,\,69,\,67,\,65,\,64,\,62,\,
			60,\,62,\,65,\,\,\,\,\,69,\,67,\,\,69,
			72,\,74,\,72,\,70,\,69,\,67,\,65,\,\,65,
			65,\,65,\,65,\,\,\,65,\,62,\,60,\,57,\,
			60,\,62,\,53,\,65,\,65,\,67,\,64,67,64,62,
			60,\,62,\,65,\,\,65,65,\,65,\,65,\,\,\
		]-12,inf),
		\amp,Pwhite(0.08,0.18,176),
		\rel,Prand([0.25],inf),
		\atk,0.01,
		\cutfreq,Pwhite(200,800,inf),
		\out,~reverbBus,
		\detune,Pwhite(1,1.2,inf),
		//\harmonic,Pexprand(1, 10, inf).round,
	);



	~jdshort = Pbind(
		\instrument,\perc,
		\dur, Pseq([0.25],inf),
		\midinote, Pshuf([
			65,\,\,\,60,\,\,\,62,\,\,65,67,\,69,\,
			62,\,\,\,65,\,\,67,70,\,67,\,70,\,74,\,
			72,\,72,\,72,\,\,74,77,\,74,\,72,\,74,72,
			70,70,67,70,72,\,72,70,67,70,72,\,72,70,67,70,
			65,\,\,65,65,\,65,\,\,\,70,\,70,\,\,70,
			70,\,70,\,\,\,69,\,67,\,65,\,64,\,62,\,
			60,\,62,\,65,\,\,\,\,\,69,\,67,\,\,69,
			72,\,74,\,72,\,70,\,69,\,67,\,65,\,\,65,
			65,\,65,\,65,\,\,\,65,\,62,\,60,\,57,\,
			60,\,62,\,53,\,65,\,65,\,67,\,64,67,64,62,
			60,\,62,\,65,\,\,65,65,\,65,\,65,\,\,\
		] + 24,inf),
		\amp,Pwhite(0.1,0.22,25),
		\rel,Prand([0.25],inf),
		\atk,0.01,
		\cutfreq,Pwhite(200,800,inf),
		\out,~combNBus,
		\detune,Pwhite(1,1.2,inf),
		//\harmonic,Pexprand(1, 10, inf).round,
	);

	~rhythmZBS = Pbind(
		\instrument,\wavfm,
		\dur, Pseq([
			0.25,0.25,0.5,
			0.25,0.25,0.5,
			0.25,0.25,0.25,0.125,0.125,
			0.25,0.25,0.5
		] * 2,inf),

		\freq,Pwhite(850,855.5,inf),
		\amp,Pwhite(0.008,0.01,inf),
		\rel,Prand([0.315,0.425,0.352],inf),
		\atk,0.01,
		\cutfreq,Pwhite(200,800,100),
		\freqM,Pwhite(1000,2000,inf),
		\modR,Pwhite(120,150,inf),
		\out,~combNBus,
	);



	~jdchords = Pbind(
		\instrument,\wavtab,
		\dur, Pseq([0.25],inf),
		\midinote, Pshuf([
			65,\,\,\,60,\,\,\,62,\,\,65,67,\,69,\,
			62,\,\,\,65,\,\,67,70,\,67,\,70,\,74,\,
			72,\,72,\,72,\,\,74,77,\,74,\,72,\,74,72,
			70,70,67,70,72,\,72,70,67,70,72,\,72,70,67,70,
			65,\,\,65,65,\,65,\,\,\,70,\,70,\,\,70,
			70,\,70,\,\,\,69,\,67,\,65,\,64,\,62,\,
			60,\,62,\,65,\,\,\,\,\,69,\,67,\,\,69,
			72,\,74,\,72,\,70,\,69,\,67,\,65,\,\,65,
			65,\,65,\,65,\,\,\,65,\,62,\,60,\,57,\,
			60,\,62,\,53,\,65,\,65,\,67,\,64,67,64,62,
			60,\,62,\,65,\,\,65,65,\,65,\,65,\,\,\
		],inf),
		\amp,Pwhite(0.008,0.02,inf),
		\rel,Pwhite(0.8,2.5,inf),
		\atk,Pwhite(0.01,2,inf),
		\cutfreq,Pwhite(200,800,inf),
		\out,~combNBus,
		\detune,Pwhite(1,1.2,inf),
		//\harmonic,Pexprand(1, 10, inf).round,
	);



/////////////////////////////////////////////////////////////////////////////////////



	~bzOri = Pbind(
		\instrument,\drones,
		\dur,Pseq([0.25],inf),
		\atk,Pwhite(0.01, 0.025, inf),
		\sus,0.2,
		\rel,Pwhite(0.2,0.25, inf),
		\midinote,Pseq([
			77,\,74,77,72,\,\,\,77,\,74,77,72,\,\,\,
			77,\,74,77,72,\,77,\,77,\,69,\,67,\,\,69,
			72,\,77,\,74,\,72,\,69,\,72,\,65,\,\,67,
			72,\,69,\,67,\,65,\,62,65,67,72,
			65,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\
		] -12,inf),
		//\harmonic,Pexprand(1, 4, inf).round,
		\detune,Pexprand(1,1.25,inf),
		\amp,Pwhite(0.008,0.09,76),
		\pan,Pwhite(-1.0,1.0,inf),
		\out,~reverbBus,
		\cutfreq,Pwhite(250,3000,inf),
		\width,Pwhite(0.4,0.7,inf),
	);




	~bzshort = Pbind(
		\instrument,\wavtab,
		\dur,Pseq([0.25],inf),
		\atk,Pwhite(0.01, 0.025, inf),
		\sus,0.2,
		\rel,Pwhite(0.1,0.15, inf),
		\midinote,Pshuf([
			77,\,74,77,72,\,\,\,77,\,74,77,72,\,\,\,
			77,\,74,77,72,\,77,\,77,\,69,\,67,\,\,69,
			72,\,77,\,74,\,72,\,69,\,72,\,65,\,\,67,
			72,\,69,\,67,\,65,\,62,65,67,72,
			65,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\
		],inf),
		//\harmonic,Pexprand(1, 4, inf).round,
		\detune,Pexprand(1,1.25,15),
		\amp,Pwhite(0.01,0.05,76),
		\pan,Pwhite(-1.0,1.0,inf),
		\out,~combNBus,
		\cutfreq,Pwhite(250,3000,inf)
	);


	~pulseBZ = Pbind(
		\instrument,\pulse,
		\dur, Pseq([0.25],inf),
		\midinote,Pseq([
			77,\,74,77,72,\,\,\,77,\,74,77,72,\,\,\,
			77,\,74,77,72,\,77,\,77,\,69,\,67,\,\,69,
			72,\,77,\,74,\,72,\,69,\,72,\,65,\,\,67,
			72,\,69,\,67,\,65,\,62,65,67,72,
			65,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\
		]-12,inf),
		\width,Pwhite(0.57,0.9,inf),
		\atk,Pwhite(1, 1.25, inf),
		\sus,Pbrown(0.8,3.5, inf),
		\rel,Pwhite(3, 8, inf),
		\harmonic,Pexprand(1, 5, inf).round,
		\detune,[1.2,1.25],
		\amp,Pexprand(0.02,0.2,inf),
		\pan,Pwhite(-1.0,1.0,inf),
		\out,~combNBus
	);


	~bzChods = Pbind(
		\instrument,\drones,
		\dur,Pseq([0.25],inf),
		\atk,Pwhite(0.01, 0.7, inf),
		\sus,0.6,
		\rel,Pwhite(0.2,3, inf),
		//original melodies from the intro of each generes
		\midinote,Pshuf([
			77,\,74,77,72,\,\,\,77,\,74,77,72,\,\,\,
			77,\,74,77,72,\,77,\,77,\,69,\,67,\,\,69,
			72,\,77,\,74,\,72,\,69,\,72,\,65,\,\,67,
			72,\,69,\,67,\,65,\,62,65,67,72,
			65,\,\,\,\,\,\,\,\,\,\,\,\,\,\,\
		]-12,inf),
		\harmonic,Pexprand(1, 4, inf).round,
		\detune,Pexprand(1,1.25,inf),
		\amp,Pwhite(0.02,0.025,inf),
		\pan,Pwhite(-1.0,1.0,inf),
		\out,~combNBus,
		\cutfreq,Pwhite(250,3000,inf),
		\width,Pwhite(0.4,0.7,inf),
	);


/////////////////////////////////////////////////////////////////////////////////////


	~shortperc1 = Pbind(
		\instrument,\grain2,
		\buf,e,
		//\trigger,0.25
		\out,~reverbBus,
		\pos, Pwhite(0.3,0.8,inf),
		\rate, Pwhite(0.5,4,inf),
		\amp,Pwhite(0.01,0.3),
		\durG,Pseq([
			0.25,0.25,0.5,
			0.25,0.25,0.5,
			0.25,0.25,0.25,0.125,0.125,
			0.25,0.25,0.5
		] * 2,inf),
		\pan, Pwhite(-1.0,1.0,inf),
	);




	~bassperc = Pbind(
		\instrument,\grain2,
		\trigger,[2,2.4],
		\buf,f,
		\out,~combNBus,
		\pos, Pwhite(0.1,0.8,inf),
		\rate, [7.68/2, 7.68*2],
		\amp,Pshuf([0.4,0.01,0.3,0.02],inf),
		\durG,[0.8,6]
	);

	~ambTuggles = [ ~amb1var,~amb1, ~amb2, ~amb3,~shortperc1,~bassperc ];
	~longTuggles = [ ~rhythmkbLong, ~jyRandlong, ~chords, ~rhythmZBS, ~jdchords, ~pulseBZ, ~bzChods];
	~shortPush = [ ~kbshort1, ~kbrhythmshort2, ~jyshort, ~jyshort2, ~jypulseshort,~jdshort, ~bzshort ];
	~oriPush = [ ~kbrhythmOri, ~jyOri, ~jdOri, ~bzOri];

	ServerTree.add(~makeNoodes);
	ServerTree.run;

	s.sync;

	t = TempoClock.new(85/60).permanent_(true);

	s.sync;

	//ambTuggles
	(1..7).do({
		arg index;
		OSCdef.new(("multi-t-1"++index).asSymbol, {
			arg msg;
			if (msg[1] == 1.0) {
				~ambTuggles[index - 1] = ~ambTuggles[index - 1].play(t,quant:1);
			} {
				~ambTuggles[index - 1].stop;
			}
		},"//multitoggle1/1/"++index,nil,57120).permanent_(true);
	});

	//longTuggles
	(1..7).do({
		arg index;
		OSCdef.new(("multi-t-2"++index).asSymbol, {
			arg msg;
			if (msg[1] == 1.0) {
				~longTuggles[index - 1] = ~longTuggles[index - 1].play(t,quant:1);
			} {
				~longTuggles[index - 1].stop;
			}
		},"//multitoggle2/1/"++index,nil,57120).permanent_(true);
	});

	//shortPush
	(1..7).do({
		arg index;
		OSCdef.new(("multi-p-1"++index).asSymbol, {
			arg msg;
			if (msg[1] == 1.0) {
				~z = ~shortPush[index - 1].play(t,quant:1);
			}
		},"//multipush1/1/"++index,nil,57120).permanent_(true);
	});

	//oriPush
	(1..4).do({
		arg index;
		OSCdef.new(("multi-p-2"++index).asSymbol, {
			arg msg;
			if (msg[1] == 1.0) {
				~q = ~oriPush[4 - index].play(t,quant:1);
			}
		},"//multipush2/"++index++"/1",nil,57120).permanent_(true);
	});

	//all events off
	OSCdef.new("multi-p-3", {
		arg msg;
		if (msg[1] == 0.0) {
			CmdPeriod.run;
		}
	}, "//All Events Off", nil, 57120).permanent_(true);


})
)





